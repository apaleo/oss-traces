// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NodaTime;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Traces.Data;

namespace Traces.Data.Migrations
{
    [DbContext(typeof(TracesDbContext))]
    partial class TracesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:.EntityFrameworkHiLoSequence", "'EntityFrameworkHiLoSequence', '', '1', '10', '', '', 'Int64', 'False'");

            modelBuilder.Entity("Traces.Data.Entities.Trace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:HiLoSequenceName", "EntityFrameworkHiLoSequence")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("AssignedRole")
                        .HasColumnType("text");

                    b.Property<string>("CompletedBy")
                        .HasColumnType("text");

                    b.Property<LocalDate?>("CompletedDate")
                        .HasColumnType("date");

                    b.Property<Instant>("CreatedUtc")
                        .HasColumnType("timestamp");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<LocalDate>("DueDate")
                        .HasColumnType("date");

                    b.Property<string>("PropertyId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReservationId")
                        .HasColumnType("text");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("UpdatedUtc")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Trace");
                });

            modelBuilder.Entity("Traces.Data.Entities.TraceFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:HiLoSequenceName", "EntityFrameworkHiLoSequence")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Instant>("CreatedUtc")
                        .HasColumnType("timestamp");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PublicId")
                        .HasColumnType("uuid");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("TenantId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TraceId")
                        .HasColumnType("integer");

                    b.Property<Instant>("UpdatedUtc")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("TraceId");

                    b.ToTable("TraceFile");
                });

            modelBuilder.Entity("Traces.Data.Entities.TraceFile", b =>
                {
                    b.HasOne("Traces.Data.Entities.Trace", "Trace")
                        .WithMany("Files")
                        .HasForeignKey("TraceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
