// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Traces.ApaleoClients.Identity
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// </summary>
    public partial interface IIdentityApi : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }


        /// <summary>
        /// Returns a list of invitations for the current account
        /// </summary>
        /// <remarks>
        /// Returns a list of all invitations to the current
        /// account.&lt;br&gt;Scopes required: 'identity:account-users.manage,
        /// identity:account-users.read'.
        /// </remarks>
        /// <param name='propertyId'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<InvitationListModel>> ApiAccountInvitationsGetWithHttpMessagesAsync(string propertyId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Invites a user to the current account
        /// </summary>
        /// <remarks>
        /// Invites a person to the current account with the requested roles
        /// and properties.&lt;br /&gt;
        /// When you specify 'IsAccountAdmin', the user will automatically have
        /// access to all properties in all roles.&lt;br /&gt;
        /// The &lt;i&gt;user&lt;/i&gt; will only be created or linked to the
        /// account, when the person accepts the invitation.&lt;br&gt;Scopes
        /// required: 'identity:account-users.manage'.
        /// </remarks>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MessageItemCollection>> ApiAccountInvitationsPostWithHttpMessagesAsync(CreateInvitationModel request = default(CreateInvitationModel), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns a list of users for the current account
        /// </summary>
        /// <remarks>
        /// Returns a list of all users that have access to the current
        /// account.&lt;br&gt;Scopes required: 'identity:account-users.manage,
        /// identity:account-users.read'.
        /// </remarks>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<AccountUsersListModel>> ApiAccountUsersGetWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Allows to modify an account user
        /// </summary>
        /// <remarks>
        /// Allows to modify an account user. Only modification of Enabled
        /// status and Roles are allowed.&lt;br&gt;Scopes required:
        /// 'identity:account-users.manage'.
        /// </remarks>
        /// <param name='email'>
        /// </param>
        /// <param name='requestBody'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MessageItemCollection>> ApiAccountUsersByEmailPatchWithHttpMessagesAsync(string email, IList<Operation> requestBody = default(IList<Operation>), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns a static list of all roles.
        /// </summary>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<RoleListModel>> ApiRolesGetWithHttpMessagesAsync(Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns a list of users for the current account.
        /// </summary>
        /// <remarks>
        /// Returns a list of all users that have access to the current
        /// account.&lt;br&gt;Scopes required: 'identity:account-users.manage,
        /// identity:account-users.read'.
        /// </remarks>
        /// <param name='propertyIds'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<UsersListModel>> ApiUsersGetWithHttpMessagesAsync(IList<string> propertyIds = default(IList<string>), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns a user for the current account.
        /// </summary>
        /// <remarks>
        /// Returns a user in the current account for a specific subjectId or
        /// email address.&lt;br&gt;Scopes required:
        /// 'identity:account-users.manage, identity:account-users.read'.
        /// </remarks>
        /// <param name='userId'>
        /// User's subjectId or email.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<UserModel>> ApiUsersByUserIdGetWithHttpMessagesAsync(string userId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Modify user in an account.
        /// </summary>
        /// <remarks>
        /// Modify user in an account.
        /// Allowed operations:
        /// - Replace firstName and lastName
        /// - Replace isAccountAdmin (setting it to true or false)
        /// - Replace enabled (setting it to true or false)&lt;br&gt;Scopes
        /// required: 'identity:account-users.manage'.
        /// </remarks>
        /// <param name='userId'>
        /// User's subjectId or email.
        /// </param>
        /// <param name='requestBody'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MessageItemCollection>> ApiUsersByUserIdPatchWithHttpMessagesAsync(string userId, IList<Operation> requestBody = default(IList<Operation>), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Remove property access.
        /// </summary>
        /// <remarks>
        /// Remove access to a property.&lt;br&gt;Scopes required:
        /// 'identity:account-users.manage'.
        /// </remarks>
        /// <param name='userId'>
        /// User's subjectId or email.
        /// </param>
        /// <param name='propertyId'>
        /// Property ID.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse> ApiUsersByUserIdPropertiesByPropertyIdDeleteWithHttpMessagesAsync(string userId, string propertyId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Returns property roles for a user.
        /// </summary>
        /// <remarks>
        /// Returns property roles for a user.&lt;br&gt;Scopes required:
        /// 'identity:account-users.manage, identity:account-users.read'.
        /// </remarks>
        /// <param name='userId'>
        /// User's subjectId or email
        /// </param>
        /// <param name='propertyId'>
        /// Property ID.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<PropertyRolesModel>> ApiUsersByUserIdPropertiesByPropertyIdRolesGetWithHttpMessagesAsync(string userId, string propertyId, Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// Modify user's roles for a property.
        /// </summary>
        /// <remarks>
        /// Modify user's roles for a property.&lt;br&gt;Scopes required:
        /// 'identity:account-users.manage'.
        /// </remarks>
        /// <param name='userId'>
        /// User's subjectId or email.
        /// </param>
        /// <param name='propertyId'>
        /// Property ID.
        /// </param>
        /// <param name='request'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<MessageItemCollection>> ApiUsersByUserIdPropertiesByPropertyIdRolesPutWithHttpMessagesAsync(string userId, string propertyId, PropertyRolesModel request = default(PropertyRolesModel), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
