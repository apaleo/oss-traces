// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Traces.ApaleoClients.Booking.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class Date
    {
        /// <summary>
        /// Initializes a new instance of the Date class.
        /// </summary>
        public Date()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Date class.
        /// </summary>
        /// <param name="serviceDate">The date the service is delivered</param>
        /// <param name="count">The number of services to book for this date.
        /// It defaults to the service offer count when not specified.</param>
        public Date(System.DateTime serviceDate, int? count = default(int?), MonetaryValueModel amount = default(MonetaryValueModel))
        {
            ServiceDate = serviceDate;
            Count = count;
            Amount = amount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the date the service is delivered
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "serviceDate")]
        public System.DateTime ServiceDate { get; set; }

        /// <summary>
        /// Gets or sets the number of services to book for this date. It
        /// defaults to the service offer count when not specified.
        /// </summary>
        [JsonProperty(PropertyName = "count")]
        public int? Count { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "amount")]
        public MonetaryValueModel Amount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Amount != null)
            {
                Amount.Validate();
            }
        }
    }
}
