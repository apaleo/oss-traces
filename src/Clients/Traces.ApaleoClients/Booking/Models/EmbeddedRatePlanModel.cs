// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Traces.ApaleoClients.Booking.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class EmbeddedRatePlanModel
    {
        /// <summary>
        /// Initializes a new instance of the EmbeddedRatePlanModel class.
        /// </summary>
        public EmbeddedRatePlanModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the EmbeddedRatePlanModel class.
        /// </summary>
        /// <param name="id">The rate plan id</param>
        /// <param name="isSubjectToCityTax">Whether the rate plan is subject
        /// to city tax or not</param>
        /// <param name="code">The code for the rate plan that can be shown in
        /// reports and table views</param>
        /// <param name="description">The description for the rate plan</param>
        /// <param name="name">The name for the rate plan</param>
        public EmbeddedRatePlanModel(string id, bool isSubjectToCityTax, string code = default(string), string description = default(string), string name = default(string))
        {
            Code = code;
            Description = description;
            Id = id;
            IsSubjectToCityTax = isSubjectToCityTax;
            Name = name;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the code for the rate plan that can be shown in
        /// reports and table views
        /// </summary>
        [JsonProperty(PropertyName = "code")]
        public string Code { get; set; }

        /// <summary>
        /// Gets or sets the description for the rate plan
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the rate plan id
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets whether the rate plan is subject to city tax or not
        /// </summary>
        [JsonProperty(PropertyName = "isSubjectToCityTax")]
        public bool IsSubjectToCityTax { get; set; }

        /// <summary>
        /// Gets or sets the name for the rate plan
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
        }
    }
}
