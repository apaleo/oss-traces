// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Traces.ApaleoClients.Booking.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for BlockAction.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum BlockAction
    {
        [EnumMember(Value = "Delete")]
        Delete,
        [EnumMember(Value = "Confirm")]
        Confirm,
        [EnumMember(Value = "Release")]
        Release,
        [EnumMember(Value = "Cancel")]
        Cancel,
        [EnumMember(Value = "Pickup")]
        Pickup,
        [EnumMember(Value = "Modify")]
        Modify,
        [EnumMember(Value = "Wash")]
        Wash
    }
    internal static class BlockActionEnumExtension
    {
        internal static string ToSerializedValue(this BlockAction? value)
        {
            return value == null ? null : ((BlockAction)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this BlockAction value)
        {
            switch( value )
            {
                case BlockAction.Delete:
                    return "Delete";
                case BlockAction.Confirm:
                    return "Confirm";
                case BlockAction.Release:
                    return "Release";
                case BlockAction.Cancel:
                    return "Cancel";
                case BlockAction.Pickup:
                    return "Pickup";
                case BlockAction.Modify:
                    return "Modify";
                case BlockAction.Wash:
                    return "Wash";
            }
            return null;
        }

        internal static BlockAction? ParseBlockAction(this string value)
        {
            switch( value )
            {
                case "Delete":
                    return BlockAction.Delete;
                case "Confirm":
                    return BlockAction.Confirm;
                case "Release":
                    return BlockAction.Release;
                case "Cancel":
                    return BlockAction.Cancel;
                case "Pickup":
                    return BlockAction.Pickup;
                case "Modify":
                    return BlockAction.Modify;
                case "Wash":
                    return BlockAction.Wash;
            }
            return null;
        }
    }
}
