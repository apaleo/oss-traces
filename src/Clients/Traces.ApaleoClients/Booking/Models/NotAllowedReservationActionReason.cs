// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Traces.ApaleoClients.Booking.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for NotAllowedReservationActionReason.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum NotAllowedReservationActionReason
    {
        [EnumMember(Value = "CheckInNotAllowedForReservationNotInStatusConfirmed")]
        CheckInNotAllowedForReservationNotInStatusConfirmed,
        [EnumMember(Value = "CheckInNotAllowedBeforeArrivalDate")]
        CheckInNotAllowedBeforeArrivalDate,
        [EnumMember(Value = "CheckInNotAllowedAfterDepartureDateTime")]
        CheckInNotAllowedAfterDepartureDateTime,
        [EnumMember(Value = "CheckInNotAllowedWithoutUnitAssignedForWholeStay")]
        CheckInNotAllowedWithoutUnitAssignedForWholeStay,
        [EnumMember(Value = "CheckOutNotAllowedForReservationNotInStatusInHouse")]
        CheckOutNotAllowedForReservationNotInStatusInHouse,
        [EnumMember(Value = "CheckOutNotAllowedForPastReservationNotInStatusConfirmedOrInHouse")]
        CheckOutNotAllowedForPastReservationNotInStatusConfirmedOrInHouse,
        [EnumMember(Value = "CheckOutNotAllowedWithDepartureDateMoreThanOneDayInTheFuture")]
        CheckOutNotAllowedWithDepartureDateMoreThanOneDayInTheFuture,
        [EnumMember(Value = "CancelNotAllowedForReservationNotInStatusConfirmed")]
        CancelNotAllowedForReservationNotInStatusConfirmed,
        [EnumMember(Value = "AmendNotAllowedForNotAmendableTimeSlices")]
        AmendNotAllowedForNotAmendableTimeSlices,
        [EnumMember(Value = "AmendArrivalNotAllowedForNotAmendableTimeSlices")]
        AmendArrivalNotAllowedForNotAmendableTimeSlices,
        [EnumMember(Value = "AmendArrivalNotAllowedForReservationNotInStatusConfirmed")]
        AmendArrivalNotAllowedForReservationNotInStatusConfirmed,
        [EnumMember(Value = "AmendDepartureNotAllowedForReservationNotInStatusConfirmedOrInHouse")]
        AmendDepartureNotAllowedForReservationNotInStatusConfirmedOrInHouse,
        [EnumMember(Value = "AmendDepartureNotAllowedForReservationDepartureDateTooFarInThePast")]
        AmendDepartureNotAllowedForReservationDepartureDateTooFarInThePast,
        [EnumMember(Value = "NoShowNotAllowedForReservationNotInStatusConfirmed")]
        NoShowNotAllowedForReservationNotInStatusConfirmed,
        [EnumMember(Value = "NoShowNotAllowedBeforeArrivalDate")]
        NoShowNotAllowedBeforeArrivalDate,
        [EnumMember(Value = "AssignUnitNotAllowedForReservationInThePast")]
        AssignUnitNotAllowedForReservationInThePast,
        [EnumMember(Value = "AssignUnitNotAllowedForReservationNotInStatusConfirmedOrInHouse")]
        AssignUnitNotAllowedForReservationNotInStatusConfirmedOrInHouse,
        [EnumMember(Value = "UnassignUnitNotAllowedForReservationInThePast")]
        UnassignUnitNotAllowedForReservationInThePast,
        [EnumMember(Value = "UnassignUnitNotAllowedForReservationNotInStatusConfirmed")]
        UnassignUnitNotAllowedForReservationNotInStatusConfirmed,
        [EnumMember(Value = "UnassignUnitNotAllowedForReservationWithoutUnit")]
        UnassignUnitNotAllowedForReservationWithoutUnit,
        [EnumMember(Value = "RemoveCityTaxNotAllowedForReservationNotInStatusConfirmedOrInHouse")]
        RemoveCityTaxNotAllowedForReservationNotInStatusConfirmedOrInHouse,
        [EnumMember(Value = "RemoveCityTaxNotAllowedForReservationWithPostedCharges")]
        RemoveCityTaxNotAllowedForReservationWithPostedCharges,
        [EnumMember(Value = "RemoveCityTaxNotAllowedForReservationWithoutCityTax")]
        RemoveCityTaxNotAllowedForReservationWithoutCityTax,
        [EnumMember(Value = "AddCityTaxNotAllowedForReservationNotInStatusConfirmedOrInHouse")]
        AddCityTaxNotAllowedForReservationNotInStatusConfirmedOrInHouse,
        [EnumMember(Value = "AddCityTaxNotAllowedForReservationWithCityTax")]
        AddCityTaxNotAllowedForReservationWithCityTax,
        [EnumMember(Value = "AddCityTaxNotAllowedForReservationForRatePlanNotSubjectToCityTax")]
        AddCityTaxNotAllowedForReservationForRatePlanNotSubjectToCityTax,
        [EnumMember(Value = "AddCityTaxNotAllowedForReservationWithPostedCharges")]
        AddCityTaxNotAllowedForReservationWithPostedCharges,
        [EnumMember(Value = "RemoveServiceNotAllowedForReservationNotInStatusConfirmedOrInHouse")]
        RemoveServiceNotAllowedForReservationNotInStatusConfirmedOrInHouse,
        [EnumMember(Value = "RemoveServiceNotAllowedForReservationInThePast")]
        RemoveServiceNotAllowedForReservationInThePast
    }
    internal static class NotAllowedReservationActionReasonEnumExtension
    {
        internal static string ToSerializedValue(this NotAllowedReservationActionReason? value)
        {
            return value == null ? null : ((NotAllowedReservationActionReason)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this NotAllowedReservationActionReason value)
        {
            switch( value )
            {
                case NotAllowedReservationActionReason.CheckInNotAllowedForReservationNotInStatusConfirmed:
                    return "CheckInNotAllowedForReservationNotInStatusConfirmed";
                case NotAllowedReservationActionReason.CheckInNotAllowedBeforeArrivalDate:
                    return "CheckInNotAllowedBeforeArrivalDate";
                case NotAllowedReservationActionReason.CheckInNotAllowedAfterDepartureDateTime:
                    return "CheckInNotAllowedAfterDepartureDateTime";
                case NotAllowedReservationActionReason.CheckInNotAllowedWithoutUnitAssignedForWholeStay:
                    return "CheckInNotAllowedWithoutUnitAssignedForWholeStay";
                case NotAllowedReservationActionReason.CheckOutNotAllowedForReservationNotInStatusInHouse:
                    return "CheckOutNotAllowedForReservationNotInStatusInHouse";
                case NotAllowedReservationActionReason.CheckOutNotAllowedForPastReservationNotInStatusConfirmedOrInHouse:
                    return "CheckOutNotAllowedForPastReservationNotInStatusConfirmedOrInHouse";
                case NotAllowedReservationActionReason.CheckOutNotAllowedWithDepartureDateMoreThanOneDayInTheFuture:
                    return "CheckOutNotAllowedWithDepartureDateMoreThanOneDayInTheFuture";
                case NotAllowedReservationActionReason.CancelNotAllowedForReservationNotInStatusConfirmed:
                    return "CancelNotAllowedForReservationNotInStatusConfirmed";
                case NotAllowedReservationActionReason.AmendNotAllowedForNotAmendableTimeSlices:
                    return "AmendNotAllowedForNotAmendableTimeSlices";
                case NotAllowedReservationActionReason.AmendArrivalNotAllowedForNotAmendableTimeSlices:
                    return "AmendArrivalNotAllowedForNotAmendableTimeSlices";
                case NotAllowedReservationActionReason.AmendArrivalNotAllowedForReservationNotInStatusConfirmed:
                    return "AmendArrivalNotAllowedForReservationNotInStatusConfirmed";
                case NotAllowedReservationActionReason.AmendDepartureNotAllowedForReservationNotInStatusConfirmedOrInHouse:
                    return "AmendDepartureNotAllowedForReservationNotInStatusConfirmedOrInHouse";
                case NotAllowedReservationActionReason.AmendDepartureNotAllowedForReservationDepartureDateTooFarInThePast:
                    return "AmendDepartureNotAllowedForReservationDepartureDateTooFarInThePast";
                case NotAllowedReservationActionReason.NoShowNotAllowedForReservationNotInStatusConfirmed:
                    return "NoShowNotAllowedForReservationNotInStatusConfirmed";
                case NotAllowedReservationActionReason.NoShowNotAllowedBeforeArrivalDate:
                    return "NoShowNotAllowedBeforeArrivalDate";
                case NotAllowedReservationActionReason.AssignUnitNotAllowedForReservationInThePast:
                    return "AssignUnitNotAllowedForReservationInThePast";
                case NotAllowedReservationActionReason.AssignUnitNotAllowedForReservationNotInStatusConfirmedOrInHouse:
                    return "AssignUnitNotAllowedForReservationNotInStatusConfirmedOrInHouse";
                case NotAllowedReservationActionReason.UnassignUnitNotAllowedForReservationInThePast:
                    return "UnassignUnitNotAllowedForReservationInThePast";
                case NotAllowedReservationActionReason.UnassignUnitNotAllowedForReservationNotInStatusConfirmed:
                    return "UnassignUnitNotAllowedForReservationNotInStatusConfirmed";
                case NotAllowedReservationActionReason.UnassignUnitNotAllowedForReservationWithoutUnit:
                    return "UnassignUnitNotAllowedForReservationWithoutUnit";
                case NotAllowedReservationActionReason.RemoveCityTaxNotAllowedForReservationNotInStatusConfirmedOrInHouse:
                    return "RemoveCityTaxNotAllowedForReservationNotInStatusConfirmedOrInHouse";
                case NotAllowedReservationActionReason.RemoveCityTaxNotAllowedForReservationWithPostedCharges:
                    return "RemoveCityTaxNotAllowedForReservationWithPostedCharges";
                case NotAllowedReservationActionReason.RemoveCityTaxNotAllowedForReservationWithoutCityTax:
                    return "RemoveCityTaxNotAllowedForReservationWithoutCityTax";
                case NotAllowedReservationActionReason.AddCityTaxNotAllowedForReservationNotInStatusConfirmedOrInHouse:
                    return "AddCityTaxNotAllowedForReservationNotInStatusConfirmedOrInHouse";
                case NotAllowedReservationActionReason.AddCityTaxNotAllowedForReservationWithCityTax:
                    return "AddCityTaxNotAllowedForReservationWithCityTax";
                case NotAllowedReservationActionReason.AddCityTaxNotAllowedForReservationForRatePlanNotSubjectToCityTax:
                    return "AddCityTaxNotAllowedForReservationForRatePlanNotSubjectToCityTax";
                case NotAllowedReservationActionReason.AddCityTaxNotAllowedForReservationWithPostedCharges:
                    return "AddCityTaxNotAllowedForReservationWithPostedCharges";
                case NotAllowedReservationActionReason.RemoveServiceNotAllowedForReservationNotInStatusConfirmedOrInHouse:
                    return "RemoveServiceNotAllowedForReservationNotInStatusConfirmedOrInHouse";
                case NotAllowedReservationActionReason.RemoveServiceNotAllowedForReservationInThePast:
                    return "RemoveServiceNotAllowedForReservationInThePast";
            }
            return null;
        }

        internal static NotAllowedReservationActionReason? ParseNotAllowedReservationActionReason(this string value)
        {
            switch( value )
            {
                case "CheckInNotAllowedForReservationNotInStatusConfirmed":
                    return NotAllowedReservationActionReason.CheckInNotAllowedForReservationNotInStatusConfirmed;
                case "CheckInNotAllowedBeforeArrivalDate":
                    return NotAllowedReservationActionReason.CheckInNotAllowedBeforeArrivalDate;
                case "CheckInNotAllowedAfterDepartureDateTime":
                    return NotAllowedReservationActionReason.CheckInNotAllowedAfterDepartureDateTime;
                case "CheckInNotAllowedWithoutUnitAssignedForWholeStay":
                    return NotAllowedReservationActionReason.CheckInNotAllowedWithoutUnitAssignedForWholeStay;
                case "CheckOutNotAllowedForReservationNotInStatusInHouse":
                    return NotAllowedReservationActionReason.CheckOutNotAllowedForReservationNotInStatusInHouse;
                case "CheckOutNotAllowedForPastReservationNotInStatusConfirmedOrInHouse":
                    return NotAllowedReservationActionReason.CheckOutNotAllowedForPastReservationNotInStatusConfirmedOrInHouse;
                case "CheckOutNotAllowedWithDepartureDateMoreThanOneDayInTheFuture":
                    return NotAllowedReservationActionReason.CheckOutNotAllowedWithDepartureDateMoreThanOneDayInTheFuture;
                case "CancelNotAllowedForReservationNotInStatusConfirmed":
                    return NotAllowedReservationActionReason.CancelNotAllowedForReservationNotInStatusConfirmed;
                case "AmendNotAllowedForNotAmendableTimeSlices":
                    return NotAllowedReservationActionReason.AmendNotAllowedForNotAmendableTimeSlices;
                case "AmendArrivalNotAllowedForNotAmendableTimeSlices":
                    return NotAllowedReservationActionReason.AmendArrivalNotAllowedForNotAmendableTimeSlices;
                case "AmendArrivalNotAllowedForReservationNotInStatusConfirmed":
                    return NotAllowedReservationActionReason.AmendArrivalNotAllowedForReservationNotInStatusConfirmed;
                case "AmendDepartureNotAllowedForReservationNotInStatusConfirmedOrInHouse":
                    return NotAllowedReservationActionReason.AmendDepartureNotAllowedForReservationNotInStatusConfirmedOrInHouse;
                case "AmendDepartureNotAllowedForReservationDepartureDateTooFarInThePast":
                    return NotAllowedReservationActionReason.AmendDepartureNotAllowedForReservationDepartureDateTooFarInThePast;
                case "NoShowNotAllowedForReservationNotInStatusConfirmed":
                    return NotAllowedReservationActionReason.NoShowNotAllowedForReservationNotInStatusConfirmed;
                case "NoShowNotAllowedBeforeArrivalDate":
                    return NotAllowedReservationActionReason.NoShowNotAllowedBeforeArrivalDate;
                case "AssignUnitNotAllowedForReservationInThePast":
                    return NotAllowedReservationActionReason.AssignUnitNotAllowedForReservationInThePast;
                case "AssignUnitNotAllowedForReservationNotInStatusConfirmedOrInHouse":
                    return NotAllowedReservationActionReason.AssignUnitNotAllowedForReservationNotInStatusConfirmedOrInHouse;
                case "UnassignUnitNotAllowedForReservationInThePast":
                    return NotAllowedReservationActionReason.UnassignUnitNotAllowedForReservationInThePast;
                case "UnassignUnitNotAllowedForReservationNotInStatusConfirmed":
                    return NotAllowedReservationActionReason.UnassignUnitNotAllowedForReservationNotInStatusConfirmed;
                case "UnassignUnitNotAllowedForReservationWithoutUnit":
                    return NotAllowedReservationActionReason.UnassignUnitNotAllowedForReservationWithoutUnit;
                case "RemoveCityTaxNotAllowedForReservationNotInStatusConfirmedOrInHouse":
                    return NotAllowedReservationActionReason.RemoveCityTaxNotAllowedForReservationNotInStatusConfirmedOrInHouse;
                case "RemoveCityTaxNotAllowedForReservationWithPostedCharges":
                    return NotAllowedReservationActionReason.RemoveCityTaxNotAllowedForReservationWithPostedCharges;
                case "RemoveCityTaxNotAllowedForReservationWithoutCityTax":
                    return NotAllowedReservationActionReason.RemoveCityTaxNotAllowedForReservationWithoutCityTax;
                case "AddCityTaxNotAllowedForReservationNotInStatusConfirmedOrInHouse":
                    return NotAllowedReservationActionReason.AddCityTaxNotAllowedForReservationNotInStatusConfirmedOrInHouse;
                case "AddCityTaxNotAllowedForReservationWithCityTax":
                    return NotAllowedReservationActionReason.AddCityTaxNotAllowedForReservationWithCityTax;
                case "AddCityTaxNotAllowedForReservationForRatePlanNotSubjectToCityTax":
                    return NotAllowedReservationActionReason.AddCityTaxNotAllowedForReservationForRatePlanNotSubjectToCityTax;
                case "AddCityTaxNotAllowedForReservationWithPostedCharges":
                    return NotAllowedReservationActionReason.AddCityTaxNotAllowedForReservationWithPostedCharges;
                case "RemoveServiceNotAllowedForReservationNotInStatusConfirmedOrInHouse":
                    return NotAllowedReservationActionReason.RemoveServiceNotAllowedForReservationNotInStatusConfirmedOrInHouse;
                case "RemoveServiceNotAllowedForReservationInThePast":
                    return NotAllowedReservationActionReason.RemoveServiceNotAllowedForReservationInThePast;
            }
            return null;
        }
    }
}
