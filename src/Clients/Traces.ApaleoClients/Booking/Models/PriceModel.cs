// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Traces.ApaleoClients.Booking.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class PriceModel
    {
        /// <summary>
        /// Initializes a new instance of the PriceModel class.
        /// </summary>
        public PriceModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PriceModel class.
        /// </summary>
        /// <param name="afterTax">Price including all included services, VAT
        /// and any other taxes like city tax</param>
        /// <param name="beforeTax">Price including all included services
        /// without VAT or any other taxes like city tax</param>
        /// <param name="currency">The currency for all prices and tax
        /// details</param>
        /// <param name="grossAmount">Price including all included services and
        /// VAT - &lt;b&gt;DEPRECATED: This field will be removed soon, use
        /// BeforeTax + Taxes.Tax instead&lt;/b&gt;</param>
        public PriceModel(double afterTax, double beforeTax, string currency, double grossAmount, TaxesModel taxes)
        {
            AfterTax = afterTax;
            BeforeTax = beforeTax;
            Currency = currency;
            GrossAmount = grossAmount;
            Taxes = taxes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets price including all included services, VAT and any
        /// other taxes like city tax
        /// </summary>
        [JsonProperty(PropertyName = "afterTax")]
        public double AfterTax { get; set; }

        /// <summary>
        /// Gets or sets price including all included services without VAT or
        /// any other taxes like city tax
        /// </summary>
        [JsonProperty(PropertyName = "beforeTax")]
        public double BeforeTax { get; set; }

        /// <summary>
        /// Gets or sets the currency for all prices and tax details
        /// </summary>
        [JsonProperty(PropertyName = "currency")]
        public string Currency { get; set; }

        /// <summary>
        /// Gets or sets price including all included services and VAT -
        /// &amp;lt;b&amp;gt;DEPRECATED: This field will be removed soon, use
        /// BeforeTax + Taxes.Tax instead&amp;lt;/b&amp;gt;
        /// </summary>
        [JsonProperty(PropertyName = "grossAmount")]
        public double GrossAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "taxes")]
        public TaxesModel Taxes { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Currency == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Currency");
            }
            if (Taxes == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Taxes");
            }
            if (Taxes != null)
            {
                Taxes.Validate();
            }
        }
    }
}
