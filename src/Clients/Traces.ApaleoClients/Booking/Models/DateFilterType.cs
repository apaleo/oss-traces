// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Traces.ApaleoClients.Booking.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for DateFilterType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum DateFilterType
    {
        [EnumMember(Value = "Arrival")]
        Arrival,
        [EnumMember(Value = "Departure")]
        Departure,
        [EnumMember(Value = "Stay")]
        Stay,
        [EnumMember(Value = "Creation")]
        Creation,
        [EnumMember(Value = "Modification")]
        Modification,
        [EnumMember(Value = "Cancellation")]
        Cancellation
    }
    internal static class DateFilterTypeEnumExtension
    {
        internal static string ToSerializedValue(this DateFilterType? value)
        {
            return value == null ? null : ((DateFilterType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this DateFilterType value)
        {
            switch( value )
            {
                case DateFilterType.Arrival:
                    return "Arrival";
                case DateFilterType.Departure:
                    return "Departure";
                case DateFilterType.Stay:
                    return "Stay";
                case DateFilterType.Creation:
                    return "Creation";
                case DateFilterType.Modification:
                    return "Modification";
                case DateFilterType.Cancellation:
                    return "Cancellation";
            }
            return null;
        }

        internal static DateFilterType? ParseDateFilterType(this string value)
        {
            switch( value )
            {
                case "Arrival":
                    return DateFilterType.Arrival;
                case "Departure":
                    return DateFilterType.Departure;
                case "Stay":
                    return DateFilterType.Stay;
                case "Creation":
                    return DateFilterType.Creation;
                case "Modification":
                    return DateFilterType.Modification;
                case "Cancellation":
                    return DateFilterType.Cancellation;
            }
            return null;
        }
    }
}
