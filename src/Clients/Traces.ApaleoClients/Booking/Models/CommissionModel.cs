// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Traces.ApaleoClients.Booking.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CommissionModel
    {
        /// <summary>
        /// Initializes a new instance of the CommissionModel class.
        /// </summary>
        public CommissionModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CommissionModel class.
        /// </summary>
        public CommissionModel(MonetaryValueModel commissionAmount, MonetaryValueModel beforeCommissionAmount = default(MonetaryValueModel))
        {
            CommissionAmount = commissionAmount;
            BeforeCommissionAmount = beforeCommissionAmount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "commissionAmount")]
        public MonetaryValueModel CommissionAmount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "beforeCommissionAmount")]
        public MonetaryValueModel BeforeCommissionAmount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (CommissionAmount == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CommissionAmount");
            }
            if (CommissionAmount != null)
            {
                CommissionAmount.Validate();
            }
            if (BeforeCommissionAmount != null)
            {
                BeforeCommissionAmount.Validate();
            }
        }
    }
}
