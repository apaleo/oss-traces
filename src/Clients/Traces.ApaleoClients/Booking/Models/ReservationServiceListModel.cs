// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Traces.ApaleoClients.Booking.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ReservationServiceListModel
    {
        /// <summary>
        /// Initializes a new instance of the ReservationServiceListModel
        /// class.
        /// </summary>
        public ReservationServiceListModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ReservationServiceListModel
        /// class.
        /// </summary>
        /// <param name="services">The list of services booked for the
        /// reservation</param>
        /// <param name="count">Total count of items</param>
        public ReservationServiceListModel(IList<ReservationServiceItemModel> services, long count)
        {
            Services = services;
            Count = count;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the list of services booked for the reservation
        /// </summary>
        [JsonProperty(PropertyName = "services")]
        public IList<ReservationServiceItemModel> Services { get; set; }

        /// <summary>
        /// Gets or sets total count of items
        /// </summary>
        [JsonProperty(PropertyName = "count")]
        public long Count { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Services == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Services");
            }
            if (Services != null)
            {
                foreach (var element in Services)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
