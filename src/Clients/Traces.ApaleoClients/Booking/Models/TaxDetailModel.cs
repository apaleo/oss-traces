// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Traces.ApaleoClients.Booking.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TaxDetailModel
    {
        /// <summary>
        /// Initializes a new instance of the TaxDetailModel class.
        /// </summary>
        public TaxDetailModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TaxDetailModel class.
        /// </summary>
        /// <param name="vatType">Possible values include: 'Null',
        /// 'VeryReduced', 'Reduced', 'Normal', 'Without', 'Special',
        /// 'ReducedCovid19', 'NormalCovid19'</param>
        public TaxDetailModel(MonetaryValueModel net, MonetaryValueModel tax, VatType vatType, double? vatPercent = default(double?))
        {
            Net = net;
            Tax = tax;
            VatPercent = vatPercent;
            VatType = vatType;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "net")]
        public MonetaryValueModel Net { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tax")]
        public MonetaryValueModel Tax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "vatPercent")]
        public double? VatPercent { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Null', 'VeryReduced',
        /// 'Reduced', 'Normal', 'Without', 'Special', 'ReducedCovid19',
        /// 'NormalCovid19'
        /// </summary>
        [JsonProperty(PropertyName = "vatType")]
        public VatType VatType { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Net == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Net");
            }
            if (Tax == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Tax");
            }
            if (Net != null)
            {
                Net.Validate();
            }
            if (Tax != null)
            {
                Tax.Validate();
            }
        }
    }
}
