// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Traces.ApaleoClients.Integration.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ObsoleteUiIntegrationModel
    {
        /// <summary>
        /// Initializes a new instance of the ObsoleteUiIntegrationModel class.
        /// </summary>
        public ObsoleteUiIntegrationModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ObsoleteUiIntegrationModel class.
        /// </summary>
        /// <param name="sourceType">Possible values include: 'Private',
        /// 'Public'</param>
        public ObsoleteUiIntegrationModel(long count, IList<UiIntegrationItemModel> uiIntegrations, string iconSource = default(string), string label = default(string), string sourceType = default(string), string sourceUrl = default(string))
        {
            Count = count;
            IconSource = iconSource;
            Label = label;
            SourceType = sourceType;
            SourceUrl = sourceUrl;
            UiIntegrations = uiIntegrations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "count")]
        public long Count { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "iconSource")]
        public string IconSource { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Private', 'Public'
        /// </summary>
        [JsonProperty(PropertyName = "sourceType")]
        public string SourceType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourceUrl")]
        public string SourceUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uiIntegrations")]
        public IList<UiIntegrationItemModel> UiIntegrations { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (UiIntegrations == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "UiIntegrations");
            }
            if (UiIntegrations != null)
            {
                foreach (var element in UiIntegrations)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
