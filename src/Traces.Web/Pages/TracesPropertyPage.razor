@page "/traces/property"
@using Traces.Common.Constants
@using Traces.Web.ViewModels.Traces
@inherits TracesDateAwareViewModel

<div>
    <div class="mb-3">
        <Button Color="Color.Primary" Clicked="@ShowCreateTraceModal">
            <i class="fa fa-plus"></i>
            @TextConstants.TracesAddButtonText</Button>
        <DatePicker Date="@CurrentFromDate" OnChange="@LoadFromDateAsync"/>
    </div>

    @if (OverdueTraces?.Any() == true)
    {
        <section class="pb-4">
            <Table>
                <TableHeader>
                    <TableRow>
                        <TableHeaderCell>@TextConstants.TracesTableTitleText</TableHeaderCell>
                        <TableHeaderCell>@TextConstants.TracesTableDescriptionText</TableHeaderCell>
                        <TableHeaderCell>@TextConstants.TracesTableDueDateText</TableHeaderCell>
                        <TableHeaderCell>@TextConstants.TracesTableReservationText</TableHeaderCell>
                        <TableHeaderCell>@TextConstants.TracesTableAssignedRoleText</TableHeaderCell>
                        <TableHeaderCell>@TextConstants.TracesTableFilesCountText</TableHeaderCell>
                        <TableHeaderCell></TableHeaderCell>
                    </TableRow>
                </TableHeader>
                <TracesComponent
                    Title="@TextConstants.OverdueTracesTitleText"
                    Traces="@OverdueTraces"
                    IsPropertyVisible="false"
                    IsReservationVisible="true"
                    IsDueDateVisible="true"
                    OnCompleteClick="@CompleteTraceAsync"
                    OnDeleteClick="@DeleteItemAsync"
                    OnEditClick="@ShowReplaceTraceModal"
                    OnNavigateClick="@NavigateToReservationAsync"/>
            </Table>
        </section>
    }

    @if (ActiveTracesDictionary?.Any() == true)
    {
        <Table>
            <TableHeader>
                <TableRow>
                    <TableHeaderCell>@TextConstants.TracesTableTitleText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTableDescriptionText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTableReservationText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTableAssignedRoleText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTableFilesCountText</TableHeaderCell>
                    <TableHeaderCell></TableHeaderCell>
                </TableRow>
            </TableHeader>
            @foreach (var (date, traces) in ActiveTracesDictionary)
            {
                <TracesComponent
                    Title="@date.ToShortDateString()"
                    Traces="@traces"
                    IsPropertyVisible="false"
                    IsReservationVisible="true"
                    IsDueDateVisible="false"
                    OnCompleteClick="@CompleteTraceAsync"
                    OnDeleteClick="@DeleteItemAsync"
                    OnEditClick="@ShowReplaceTraceModal"
                    OnNavigateClick="@NavigateToReservationAsync"/>
            }
        </Table>
    }

    <section class="pb-3">
        <p>@LoadedUntilDateMessage</p>
        <Button Color="Color.Primary" Clicked="@LoadNextDaysAsync">
            <i class="fa fa-angle-double-right"></i>
            @string.Format(TextConstants.TracesLoadMoreButtonTextFormat, CurrentDayIncrease)</Button>
    </section>

    <Modal @ref="@EditTraceModalRef">
        <ModalBackdrop/>
        <ModalContent Centered="true" Size="ModalSize.Large">
            <ModalHeader>
                <ModalTitle>@TextConstants.EditTraceModalTitle</ModalTitle>
                <CloseButton Clicked="@HideEditTraceModal"/>
            </ModalHeader>
            <ModalBody>
                @if (EditTraceModalRef.Visible)
                {
                    <EditTraceDialog EditTraceDialogVm="@EditTraceDialogViewModel" OnClose="@HideEditTraceModal" OnSubmit="@EditTraceItemAsync" SubmitButtonText="@TextConstants.EditTraceButtonText"/>
                }
            </ModalBody>
        </ModalContent>
    </Modal>

    <Modal @ref="@CreateTraceModalRef">
        <ModalBackdrop/>
        <ModalContent Centered="true" Size="ModalSize.Large">
            <ModalHeader>
                <ModalTitle>@TextConstants.CreateTraceModalTitle</ModalTitle>
                <CloseButton Clicked="@HideCreateTraceModal"/>
            </ModalHeader>
            <ModalBody>
                @if (CreateTraceModalRef.Visible)
                {
                    <EditTraceDialog EditTraceDialogVm="@EditTraceDialogViewModel" OnClose="@HideCreateTraceModal" OnSubmit="@CreateTraceItemAsync" SubmitButtonText="@TextConstants.CreateTraceButtonText"/>
                }
            </ModalBody>
        </ModalContent>
    </Modal>
</div>