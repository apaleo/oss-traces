@page "/traces/reservation"
@using Traces.Common.Constants
@using Traces.Web.ViewModels
@inject TracesReservationViewModel TracesReservationViewModel

<div>
    <h1>Traces</h1>

    <Button Color="Color.Primary" Clicked="@TracesReservationViewModel.ShowCreateTraceModal">@TextConstants.TracesAddButtonText</Button>

    @if (TracesReservationViewModel.OverdueTraces != null && TracesReservationViewModel.OverdueTraces.Any())
    {
        <section class="pb-4">
            <Table>
                <TableHeader>
                    <TableRow>
                        <TableHeaderCell>@TextConstants.TracesTableTitleText</TableHeaderCell>
                        <TableHeaderCell>@TextConstants.TracesTableDescriptionText</TableHeaderCell>
                        <TableHeaderCell>@TextConstants.TracesTableDueDateText</TableHeaderCell>
                        <TableHeaderCell>@TextConstants.TracesTablePropertyText</TableHeaderCell>
                        <TableHeaderCell></TableHeaderCell>
                    </TableRow>
                </TableHeader>
                <TracesComponent
                    Title="@TextConstants.OverdueTracesTitleText"
                    Traces="@TracesReservationViewModel.OverdueTraces"
                    IsPropertyVisible="true"
                    IsDueDateVisible="true"
                    OnCompleteClick="@TracesReservationViewModel.CompleteTraceAsync"
                    OnDeleteClick="@TracesReservationViewModel.DeleteItemAsync"
                    OnEditClick="@TracesReservationViewModel.ShowReplaceTraceModal"/>
            </Table>
        </section>
    }

    @if (TracesReservationViewModel.SortedGroupedTracesDictionary != null && TracesReservationViewModel.SortedGroupedTracesDictionary.Any())
    {
        <Table>
            <TableHeader>
                <TableRow>
                    <TableHeaderCell>@TextConstants.TracesTableTitleText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTableDescriptionText</TableHeaderCell>
                    <TableHeaderCell></TableHeaderCell>
                </TableRow>
            </TableHeader>
            @foreach (var (date, traces) in TracesReservationViewModel.SortedGroupedTracesDictionary)
            {
                <TracesComponent
                Title="@date.ToShortDateString()"
                Traces="@traces"
                IsPropertyVisible="false"
                IsDueDateVisible="false"
                OnCompleteClick="@TracesReservationViewModel.CompleteTraceAsync"
                OnDeleteClick="@TracesReservationViewModel.DeleteItemAsync"
                OnEditClick="@TracesReservationViewModel.ShowReplaceTraceModal"/>
            }
        </Table>
    }

    <Modal @ref="@TracesReservationViewModel.EditTraceModalRef">
            <ModalBackdrop />
            <ModalContent IsCentered="true" Size="ModalSize.Large">
                <ModalHeader>
                    <ModalTitle>@TextConstants.EditTraceModalTitle</ModalTitle>
                    <CloseButton Clicked="@TracesReservationViewModel.HideEditTraceModal"/>
                </ModalHeader>
                <ModalBody>
                    <EditTraceDialog EditTraceDialogVm="@TracesReservationViewModel.EditTraceDialogViewModel" OnClose="@TracesReservationViewModel.HideEditTraceModal" OnSubmit="@TracesReservationViewModel.EditTraceItemAsync" SubmitButtonText="@TextConstants.EditTraceButtonText"/>
                </ModalBody>
            </ModalContent>
        </Modal>

        <Modal @ref="@TracesReservationViewModel.CreateTraceModalRef">
            <ModalBackdrop />
            <ModalContent IsCentered="true" Size="ModalSize.Large">
                <ModalHeader>
                    <ModalTitle>@TextConstants.CreateTraceModalTitle</ModalTitle>
                    <CloseButton Clicked="@TracesReservationViewModel.HideCreateTraceModal"/>
                </ModalHeader>
                <ModalBody>
                    <EditTraceDialog EditTraceDialogVm="@TracesReservationViewModel.EditTraceDialogViewModel" OnClose="@TracesReservationViewModel.HideCreateTraceModal" OnSubmit="@TracesReservationViewModel.CreateTraceItemAsync" SubmitButtonText="@TextConstants.CreateTraceButtonText"/>
                </ModalBody>
            </ModalContent>
        </Modal>
</div>

@code
{

    protected override async Task OnInitializedAsync()
    {
        await TracesReservationViewModel.LoadAsync();
        await base.OnInitializedAsync();
    }

}