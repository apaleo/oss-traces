@page "/traces/account"
@using Traces.Common.Constants
@using Traces.Web.ViewModels
@inject TracesAccountViewModel TracesAccountViewModel

@if (TracesAccountViewModel.OverdueTraces != null && TracesAccountViewModel.OverdueTraces.Any())
{
    <section class="pb-4">
        <TracesComponent
            Title="@TextConstants.OverdueTracesTitleText"
            Traces="@TracesAccountViewModel.OverdueTraces"
            IsPropertyVisible="true"
            IsDueDateVisible="true"
            OnCompleteClick="@TracesAccountViewModel.CompleteTraceAsync"
            OnDeleteClick="@TracesAccountViewModel.DeleteItemAsync"
            OnEditClick="@TracesAccountViewModel.ShowReplaceTraceModal"/>
    </section>
}

<div>
    @if (TracesAccountViewModel.SortedGroupedTracesDictionary != null && TracesAccountViewModel.SortedGroupedTracesDictionary.Any())
    {
        foreach (var (date, traces) in TracesAccountViewModel.SortedGroupedTracesDictionary)
        {
            <TracesComponent
            Title="@date.ToShortDateString()"
            Traces="@traces"
            IsPropertyVisible="true"
            IsDueDateVisible="false"
            OnCompleteClick="@TracesAccountViewModel.CompleteTraceAsync"
            OnDeleteClick="@TracesAccountViewModel.DeleteItemAsync"
            OnEditClick="@TracesAccountViewModel.ShowReplaceTraceModal"/>
        }
    }

    <Modal @ref="@TracesAccountViewModel.EditTraceModalRef">
        <ModalBackdrop />
        <ModalContent IsCentered="true" Size="ModalSize.Large">
            <ModalHeader>
                <ModalTitle>@TextConstants.EditTraceModalTitle</ModalTitle>
                <CloseButton Clicked="@TracesAccountViewModel.HideEditTraceModal"/>
            </ModalHeader>
            <ModalBody>
                <EditTraceDialog EditTraceDialogVm="@TracesAccountViewModel.EditTraceDialogViewModel" OnClose="@TracesAccountViewModel.HideEditTraceModal" OnSubmit="@TracesAccountViewModel.EditTraceItemAsync" SubmitButtonText="@TextConstants.EditTraceButtonText"/>
            </ModalBody>
        </ModalContent>
    </Modal>
</div>

@code
{

    protected override async Task OnInitializedAsync()
    {
        await TracesAccountViewModel.LoadAsync();
        await base.OnInitializedAsync();
    }
}