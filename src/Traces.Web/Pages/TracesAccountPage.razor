@page "/traces/account"
@using Traces.Common.Constants
@using Traces.Web.ViewModels
@inject TracesAccountViewModel TracesAccountViewModel

<div class="mb-3">
    <!-- TODO: Remove before merge -->
    <Button Clicked="@TracesAccountViewModel.TestAsync">Test</Button>
    <DatePicker Date="@TracesAccountViewModel.CurrentFromDate" OnChange="@TracesAccountViewModel.LoadFromDateAsync"/>
</div>

@if (TracesAccountViewModel.OverdueTraces != null && TracesAccountViewModel.OverdueTraces.Any())
{
    <section class="pb-4">
        <Table>
            <TableHeader>
                <TableRow>
                    <TableHeaderCell>@TextConstants.TracesTableTitleText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTableDescriptionText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTableDueDateText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTablePropertyText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTableReservationText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTableAssignedRoleText</TableHeaderCell>
                    <TableHeaderCell></TableHeaderCell>
                </TableRow>
            </TableHeader>
            <TracesComponent
                Title="@TextConstants.OverdueTracesTitleText"
                Traces="@TracesAccountViewModel.OverdueTraces"
                IsPropertyVisible="true"
                IsReservationVisible="true"
                IsDueDateVisible="true"
                OnCompleteClick="@TracesAccountViewModel.CompleteTraceAsync"
                OnDeleteClick="@TracesAccountViewModel.DeleteItemAsync"
                OnEditClick="@TracesAccountViewModel.ShowReplaceTraceModal"
                OnNavigateClick="@TracesAccountViewModel.NavigateToReservationAsync"/>
        </Table>
    </section>
}

<div>
    @if (TracesAccountViewModel.SortedGroupedTracesDictionary != null && TracesAccountViewModel.SortedGroupedTracesDictionary.Any())
    {
        <Table>
            <TableHeader>
                <TableRow>
                    <TableHeaderCell>@TextConstants.TracesTableTitleText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTableDescriptionText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTablePropertyText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTableReservationText</TableHeaderCell>
                    <TableHeaderCell>@TextConstants.TracesTableAssignedRoleText</TableHeaderCell>
                    <TableHeaderCell></TableHeaderCell>
                </TableRow>
            </TableHeader>
            @foreach (var (date, traces) in TracesAccountViewModel.SortedGroupedTracesDictionary)
            {
                <TracesComponent
                    Title="@date.ToShortDateString()"
                    Traces="@traces"
                    IsPropertyVisible="true"
                    IsReservationVisible="true"
                    IsDueDateVisible="false"
                    OnCompleteClick="@TracesAccountViewModel.CompleteTraceAsync"
                    OnDeleteClick="@TracesAccountViewModel.DeleteItemAsync"
                    OnEditClick="@TracesAccountViewModel.ShowReplaceTraceModal"
                    OnNavigateClick="@TracesAccountViewModel.NavigateToReservationAsync"/>
            }
        </Table>
    }

    <section class="pb-3">
        <p>@TracesAccountViewModel.LoadedUntilDateMessage</p>
        <Button Color="Color.Primary" Clicked="@TracesAccountViewModel.LoadNextDaysAsync">
            <i class="fa fa-angle-double-right"></i>
            @string.Format(TextConstants.TracesLoadMoreButtonTextFormat, TracesAccountViewModel.CurrentDayIncrease)</Button>
    </section>

    <Modal @ref="@TracesAccountViewModel.EditTraceModalRef">
        <ModalBackdrop/>
        <ModalContent IsCentered="true" Size="ModalSize.Large">
            <ModalHeader>
                <ModalTitle>@TextConstants.EditTraceModalTitle</ModalTitle>
                <CloseButton Clicked="@TracesAccountViewModel.HideEditTraceModal"/>
            </ModalHeader>
            <ModalBody>
                <EditTraceDialog EditTraceDialogVm="@TracesAccountViewModel.EditTraceDialogViewModel" OnClose="@TracesAccountViewModel.HideEditTraceModal" OnSubmit="@TracesAccountViewModel.EditTraceItemAsync" SubmitButtonText="@TextConstants.EditTraceButtonText"/>
            </ModalBody>
        </ModalContent>
    </Modal>
</div>

@code
{
    protected override async Task OnInitializedAsync()
    {
        await TracesAccountViewModel.LoadAsync();
        await base.OnInitializedAsync();
    }
}