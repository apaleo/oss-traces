@page "/"
@using System.Globalization
@using Traces.Web.ViewModels
@inject TracesViewModel TracesViewModel

<div class="content-actions">
<button class="btn btn-outline-primary" @onclick="@TracesViewModel.ShowCreateTraceModal">
    <i class="fa fa-plus pr-2"></i>Add
</button>
</div>

@if (TracesViewModel.Traces != null && TracesViewModel.Traces.Any())
{
    <Table IsHoverable="true">
        <TableHeader>
            <TableRow>
                <TableHeaderCell class="status-header-cell"></TableHeaderCell>
                <TableHeaderCell>Title</TableHeaderCell>
                <TableHeaderCell>Description</TableHeaderCell>
                <TableHeaderCell>Due date</TableHeaderCell>
                <TableHeaderCell>Actions</TableHeaderCell>
            </TableRow>
        </TableHeader>
        <TableBody>
            @foreach (var trace in TracesViewModel.Traces)
            {
                <TableRow>
                    <TableRowCell><CheckEdit Checked="false" CheckedChanged="@(() => TracesViewModel.CompleteTraceAsync(trace.Id))"></CheckEdit></TableRowCell>
                    <TableRowCell>@trace.Title</TableRowCell>
                    <TableRowCell>@trace.Description</TableRowCell>
                    <TableRowCell>@trace.DueDate.ToString("dd/MM/yyyy", CultureInfo.InstalledUICulture)</TableRowCell>
                    <TableRowCell>
                        <Buttons>
                            <Button Color="Color.Secondary" Clicked="@(() => TracesViewModel.ShowReplaceTraceModal(trace))">Edit</Button>
                            <Button Color="Color.Danger" Clicked="@(() => TracesViewModel.DeleteItemAsync(trace.Id))">Delete</Button>
                        </Buttons>
                    </TableRowCell>
                </TableRow>
            }
        </TableBody>
    </Table>
}
else
{
    <div class="pt-2">
        <span><i class="fa fa-info-circle pt-3 pr-2"></i>We couldn't find any pending traces.</span>
    </div>
}

<Modal @ref="@TracesViewModel.CreateTraceModalRef">
    <ModalBackdrop/>
    <ModalContent IsCentered="true" Size="ModalSize.Large">
        <ModalHeader>
            <ModalTitle>@TracesViewModel.EditTraceModificationModel.ModalTitle</ModalTitle>
            <CloseButton Clicked="@TracesViewModel.HideCreateTraceModal"/>
        </ModalHeader>
        <ModalBody>
            <EditTraceDialog OnClose="@TracesViewModel.HideCreateTraceModal"/>
        </ModalBody>
    </ModalContent>
</Modal>

@code
{

    protected override async Task OnInitializedAsync()
    {
        await TracesViewModel.LoadAsync();
        await base.OnInitializedAsync();
    }

}