@page "/"
@using Traces.ApaleoClients.Booking.Models
@using Traces.Web.Models
@using Traces.Web.ViewModels
@inject TracesViewModel TracesViewModel
@implements IDisposable

<div class="content-actions">
    <Button class="btn btn-outline-primary" Clicked="@TracesViewModel.ShowCreateTraceModal"><i class="fa fa-plus pr-2"></i>Add</Button>
</div>

@foreach (var date in TracesViewModel.SortedDates)
{
    <TraceGroupTemplate Traces="@TracesViewModel.TracesDateMapping[date]" Date="@date"></TraceGroupTemplate>
}


<Modal @ref="@TracesViewModel.CreateTraceModalRef">
    <ModalBackdrop/>
    <ModalContent IsCentered="true" Size="ModalSize.Large">
        <ModalHeader>
            <ModalTitle>@TracesViewModel.EditTraceModificationModel.ModalTitle</ModalTitle>
            <CloseButton Clicked="@TracesViewModel.HideCreateTraceModal"/>
        </ModalHeader>
        <ModalBody>
            <EditTraceDialog OnClose="@TracesViewModel.HideCreateTraceModal"/>
        </ModalBody>
    </ModalContent>
</Modal>

@code
{
    protected override void OnInitialized()
    {
        TracesViewModel.RefreshRequested += OnRefresh;
    }

    protected override async Task OnInitializedAsync()
    {
        await TracesViewModel.LoadAsync();
        await base.OnInitializedAsync();
    }

    public void Dispose()
    {
        TracesViewModel.RefreshRequested -= OnRefresh;
    }

    private void OnRefresh()
    {
        StateHasChanged();
    }

}