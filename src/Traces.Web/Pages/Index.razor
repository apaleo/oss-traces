@page "/"
@using System.Globalization
@using Traces.Web.ViewModels
@inject TracesViewModel TracesViewModel

<div>
    <h1>Traces</h1>

    <button class="btn btn-primary" @onclick="@TracesViewModel.ShowCreateTraceModal">Add</button>

    <div>
        @if (TracesViewModel.Traces != null && TracesViewModel.Traces.Any())
        {
            <h2>Pending traces</h2>
            <table>
                <tr>
                    <th>Title</th>
                    <th>Description</th>
                    <th>Due date</th>
                    <th>Actions</th>
                </tr>
                @foreach (var trace in TracesViewModel.Traces)
                {
                    <tr>
                        <td>@trace.Title</td>
                        <td>@trace.Description</td>
                        <td>@trace.DueDate.ToString("dd/MM/yyyy", CultureInfo.InstalledUICulture)</td>
                        <td>
                            <div>
                                <button class="btn btn-primary" @onclick="@(() => TracesViewModel.CompleteTraceAsync(trace.Id))">complete</button>
                                <button class="btn btn-secondary" @onclick="@(() => TracesViewModel.ShowReplaceTraceModal(trace))">edit</button>
                                <button class="btn btn-danger" @onclick="@(() => TracesViewModel.DeleteItemAsync(trace.Id))">delete</button>
                            </div>
                        </td>
                    </tr>
                }
            </table>
        }
    </div>

    <Modal @ref="@TracesViewModel.CreateTraceModalRef">
        <ModalBackdrop />
        <ModalContent IsCentered="true" Size="ModalSize.Large">
            <ModalHeader>
                <ModalTitle>@TracesViewModel.EditTraceModificationModel.ModalTitle</ModalTitle>
                <CloseButton Clicked="@TracesViewModel.HideCreateTraceModal"/>
            </ModalHeader>
            <ModalBody>
                <EditTraceDialog OnClose="@TracesViewModel.HideCreateTraceModal"/>
            </ModalBody>
        </ModalContent>
    </Modal>
</div>

@code
{

    protected override async Task OnInitializedAsync()
    {
        await TracesViewModel.LoadTracesAsync();
        await base.OnInitializedAsync();
    }

}
