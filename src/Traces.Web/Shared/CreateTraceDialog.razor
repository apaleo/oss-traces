@using System.Globalization
@using NodaTimePicker
@using NodaTime
@using Traces.Web.Models
@using Traces.Web.ViewModels
@inject TracesViewModel TracesViewModel

<div class="dialog-title">
    <h2>Create new trace</h2>
</div>
<input type="text" placeholder="Title" @bind="@CurrentTrace.Title"/>
<input type="text" placeholder="Description" @bind="@CurrentTrace.Description"/>
<input type="text" @onfocus="@DatePickerFocused" placeholder="Due date" value="@DueDateString"/>
<DatePicker Visible="@IsDatePickerVisible" ShowClose="true" OnSelected="@DatePickerOnSelected" MinDate="@MinDate"/>

<input type="text" @onfocus="@TimePickerFocused" placeholder="Due time" value="@DueTimeString"/>
<TimePicker Visible="@IsTimePickerVisible" OnSelectedTimeChanged="@TimePickerOnSelected" ShowClose="@true" CloseOnSelect="@true"/>

<div class="dialog-buttons">
    <button class="btn btn-primary" @onclick="@OnCreateButton">Create</button>
</div>

@code
{

    public CreateTraceItemModel CurrentTrace { get; set; }

    [Parameter] public EventCallback OnClose { get; set; }

    public bool IsDatePickerVisible { get; set; }

    public bool IsTimePickerVisible { get; set; }

    public string DueDateString { get; set; }

    public string DueTimeString { get; set; }

    public LocalDate MinDate { get; set; }

    void DatePickerFocused()
    {
        IsDatePickerVisible = true;
    }

    void DatePickerOnSelected(LocalDate selectedDate)
    {
        IsDatePickerVisible = false;
        DueDateString = selectedDate.ToString("dd/MM/yyyy", CultureInfo.CurrentCulture);
        CurrentTrace.DueDate = selectedDate;
        StateHasChanged();
    }

    void TimePickerFocused()
    {
        IsTimePickerVisible = true;
    }

    void TimePickerOnSelected(LocalTime selectedTime)
    {
        DueTimeString = selectedTime.ToString("HH:mm", CultureInfo.CurrentCulture);
        CurrentTrace.DueTime = selectedTime;
        StateHasChanged();

    }

    void OnCreateButton()
    {
        if (TracesViewModel.CreateTraceItem(CurrentTrace))
        {
            OnClose.InvokeAsync(null);
        }
    }

    public CreateTraceDialog()
    {
        var systemClockCurrentInstantInUtc = SystemClock.Instance.GetCurrentInstant().InUtc();

        CurrentTrace = new CreateTraceItemModel
        {
            DueDate = systemClockCurrentInstantInUtc.Date,
            DueTime = systemClockCurrentInstantInUtc.TimeOfDay
        };

        DueDateString = systemClockCurrentInstantInUtc.Date.ToString("dd/MM/yyyy", CultureInfo.CurrentCulture);
        DueTimeString = systemClockCurrentInstantInUtc.TimeOfDay.ToString("HH:mm", CultureInfo.CurrentCulture);
        MinDate = systemClockCurrentInstantInUtc.Date;
    }

}
