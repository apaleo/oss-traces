@using Traces.Web.Models
@using Traces.Web.ViewModels
@inject TracesViewModel TracesViewModel

<div class="dialog-title">
    <h2>Create new trace</h2>
</div>
<EditForm Model="@CurrentTrace">
    <p>
        <label for="title">Title: </label>
        <InputText id="title" @bind-Value="@CurrentTrace.Title"/>
    </p>

    <p>
        <label for="description">Description: </label>
        <InputTextArea id="description" @bind-Value="@CurrentTrace.Description"/>
    </p>

    <p>
        <label for="duedate">Due date: </label>
        <InputDate id="duedate" @bind-Value="@CurrentTrace.DueDate"/>
    </p>
</EditForm>

<div class="dialog-buttons">
    <button class="btn btn-secondary" @onclick="@OnClose">Close</button>
    <button class="btn btn-primary" @onclick="@OnCreateButton">Create</button>
</div>

@code
{

    public CreateTraceItemModel CurrentTrace { get; }

    [Parameter] public EventCallback OnClose { get; set; }

    public CreateTraceDialog()
    {
        CurrentTrace = new CreateTraceItemModel();
    }

    async void OnCreateButton()
    {
        if (await TracesViewModel.CreateTraceItemAsync(CurrentTrace))
        {
            await OnClose.InvokeAsync(null);
        }
    }

}
