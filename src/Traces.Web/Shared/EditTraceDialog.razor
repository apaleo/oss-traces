@using Traces.Web.Models

<Form>
    <Field>
        <FieldLabel>Title</FieldLabel>
        <FieldBody>
            <TextEdit @bind-Text="@EditTraceDialogVm.Title"/>
        </FieldBody>
    </Field>
    <Field>
        <FieldLabel>Description</FieldLabel>
        <FieldBody>
            <MemoEdit Rows="4" @bind-Text="@EditTraceDialogVm.Description"/>
        </FieldBody>
    </Field>

    <Field>
        <FieldLabel>Due date</FieldLabel>
        <FieldBody>
            <DateEdit @bind-Date="@EditTraceDialogVm.DueDate" Min="@DateTime.Today"/>
        </FieldBody>
    </Field>
    <ModalFooter>
        <Button Color="Color.Primary" Type="ButtonType.Submit" PreventDefaultOnSubmit="true" IsLoading="@_isLoading" Clicked="@OnCreateOrEditButtonClick">@SubmitButtonText</Button>
        <Button Color="Color.Secondary" Type="ButtonType.Submit" PreventDefaultOnSubmit="true" IsLoading="@_isLoading" Clicked="@OnClose">Close</Button>
    </ModalFooter>
</Form>

@code
{

    private bool _isLoading;

    [Parameter]
    public EventCallback OnClose { get; set; }

    [Parameter]
    public EventCallback OnSubmit { get; set; }

    [Parameter]
    public EditTraceDialogViewModel EditTraceDialogVm { get; set; }

    [Parameter]
    public string SubmitButtonText { get; set; }

    async void OnCreateOrEditButtonClick()
    {
        _isLoading = true;

        await OnSubmit.InvokeAsync(null);

        _isLoading = false;
    }

}
